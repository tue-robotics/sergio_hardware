########################################################################
#                                                                      #
# Simple Open EtherCAT Master (SOEM) deployer file 				   	   #
#                                                                      #
########################################################################

#### DECLARATION OF PARAMETERS ####
### SETTINGS
var int BODYNUMBER 	= 2
var double 	Ts 		= 0.001
var int joint 		= 1;
var int	data_size 	= 30*1000;
var string filename = "Leg_new_acc15_trunk10.dat";
#var string filename = "test.dat";
var string fileout 	= "/home/amigo/ros/data/private/Ton_data/torso_validation/"+filename;
TORSO_FeedForwardAcc.acceleration_gain 	= array(0.15, 0.15);


var double P_AMP 	= 0.134;
var double P_WID = 7.0;
var array P_OFFSET = array(0.259, 0.360);
var double VEL = 0.045;
var double ACC = 0.030;

var array MAXVEL                = array(0.034, 0.024); # spindle vel [m/s] (6 and 4 secs. over full range)
var array MAXACC                = array(0.034, 0.024);   # spindle acc [m/s2] (1 sec to full speed)
MAXVEL[joint-1] = VEL;
MAXACC[joint-1] = ACC;
TORSO_ReferenceGenerator.maxVelocity      = array(MAXVEL)
TORSO_ReferenceGenerator.maxAcceleration  = array(MAXACC)

var double P_PER = 2*P_WID;
var array P_AMPLITUDE = array(0.0, 0.0);
P_AMPLITUDE[joint-1] = P_AMP;
var array P_WIDTH =  array(P_WID, P_WID);
var array P_PERIOD = array(P_PER, P_PER);
var array P_PHASE = array(1.0, 1.0);



### TRACING COMPONENT ###
loadComponent("Tracing","Signal::Tracing")
setActivity("Tracing",0.0,HighestPriority,ORO_SCHED_RT)
addPeer("Supervisor","Tracing")
Tracing.vector_sizes = array (2.0, 2.0, 2.0, 2.0,2.0) 
Tracing.buffersize = data_size;
Tracing.filename = fileout;
Tracing.Ts = Ts
Tracing.configure

connect ("TORSO_ReferenceGenerator.posout",	    "Tracing.in1", ConnPolicy() );
connect ("TORSO_Controller.out",	    "Tracing.in2", ConnPolicy() );
connect ("TORSO_ReadEncoders.out",	    "Tracing.in3", ConnPolicy() );
#connect ("TORSO_ReadEncoders.out",	    "Tracing.in4", ConnPolicy() );
connect ("TORSO_FeedForwardModel.ffw_out",	    "Tracing.in4", ConnPolicy() );
connect ("TORSO_FeedForwardAcc.out",	    "Tracing.in5", ConnPolicy() );


### SOURCES ###
loadComponent("TORSO_Pulse","SOURCES::PulseSignal")
addPeer("Supervisor","TORSO_Pulse")
setActivity("TORSO_Pulse",Ts,HighestPriority,ORO_SCHED_RT)
TORSO_Pulse.period    	 = P_PERIOD
TORSO_Pulse.pulse_width  = P_WIDTH
TORSO_Pulse.amplitude    = P_AMPLITUDE
TORSO_Pulse.phase_delay  = P_PHASE
TORSO_Pulse.offset  	 = P_OFFSET
TORSO_Pulse.vector_size  = 2;
TORSO_Pulse.configure

connect ("TORSO_Pulse.out",     "TORSO_ReferenceGenerator.posin1",        ConnPolicy() ); # RefGoal


Supervisor.AddEnabledPeer(	"TORSO_Pulse", BODYNUMBER)
Supervisor.AddEnabledPeer(	"Tracing", BODYNUMBER)
